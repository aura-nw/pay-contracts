/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Uint128 = string;
export type Logo = {
  url: string;
} | {
  embedded: EmbeddedLogo;
};
export type EmbeddedLogo = {
  svg: Binary;
} | {
  png: Binary;
};
export type Binary = string;
export interface InstantiateMsg {
  accepted_denom: string;
  price_feed: string;
  receiver_address: string;
  receiver_name: string;
  token_code_id: number;
  token_instantiation_msg: InstantiateMsg1;
}
export interface InstantiateMsg1 {
  decimals: number;
  initial_balances: Cw20Coin[];
  marketing?: InstantiateMarketingInfo | null;
  mint?: MinterResponse | null;
  name: string;
  symbol: string;
}
export interface Cw20Coin {
  address: string;
  amount: Uint128;
}
export interface InstantiateMarketingInfo {
  description?: string | null;
  logo?: Logo | null;
  marketing?: string | null;
  project?: string | null;
}
export interface MinterResponse {
  cap?: Uint128 | null;
  minter: string;
}
export type ExecuteMsg = {
  exchange: {
    amount: Uint128;
    expected_received: Uint128;
  };
} | {
  withdraw: {};
};
export type QueryMsg = {
  owner: {};
} | {
  receiver: {};
} | {
  exchanging_info: {};
};
export interface ExchangingInfoResponse {
  accepted_denom: string;
  price_feed: string;
  token_address: string;
}
export type String = string;
export interface ReceiverResponse {
  address: string;
  name: string;
}